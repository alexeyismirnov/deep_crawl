# Orthodox.cn Deep Web Crawler - .gitignore

# =============================================================================
# OUTPUT AND DATA FILES
# =============================================================================

# Crawler output directory (contains all crawled content)
output/
crawl_results/
data/
results/

# Individual crawled files
*.md
!README.md
!USAGE_GUIDE.md
!CHANGELOG.md
!CONTRIBUTING.md
!website_plan.md

# JSON data files
crawl_data_*.json
site_data_*.json
results_*.json

# CSV exports
*.csv

# Log files
*.log
logs/
crawl_logs/

# Temporary files during crawling
temp/
tmp/
.temp/
crawl_temp/

# =============================================================================
# PYTHON
# =============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# =============================================================================
# SYSTEM FILES
# =============================================================================

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =============================================================================
# EDITORS AND IDEs
# =============================================================================

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets
.history/
*.vsix

# PyCharm
.idea/
*.iws
*.iml
*.ipr

# Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache
*.sublime-workspace
*.sublime-project

# Vim
[._]*.s[a-v][a-z]
!*.svg
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]
Session.vim
Sessionx.vim
.netrwhist
*~
tags
[._]*.un~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# =============================================================================
# CONFIGURATION FILES (SENSITIVE)
# =============================================================================

# Custom configuration files that might contain sensitive data
config.ini
settings.ini
secrets.ini
private_config.ini

# API keys and credentials
.env.local
.env.production
.env.staging
api_keys.txt
credentials.json
secrets.json

# Database files
*.db
*.sqlite
*.sqlite3

# =============================================================================
# CRAWLER-SPECIFIC FILES
# =============================================================================

# Browser automation files
chromedriver
geckodriver
*.exe

# Session files
session_*
cookies_*
*.session

# Cache files
cache/
.cache/
webcache/

# Downloaded images and media
images/
media/
downloads/
assets/

# Backup files
backup/
backups/
*.bak
*.backup

# Archive files
*.zip
*.tar.gz
*.rar
*.7z

# Large data files
*.csv.gz
*.json.gz
*.txt.gz

# =============================================================================
# DEVELOPMENT AND TESTING
# =============================================================================

# Test files and directories
test_output/
test_results/
test_data/
mock_data/

# Development scripts
dev_*
test_*
debug_*
experimental_*

# Profiling results
*.prof
*.profile

# Memory dumps
*.dump
*.dmp

# =============================================================================
# DOCUMENTATION BUILD
# =============================================================================

# Sphinx build
_build/
_static/
_templates/

# LaTeX
*.aux
*.bbl
*.blg
*.fdb_latexmk
*.fls
*.log
*.out
*.synctex.gz
*.toc

# =============================================================================
# MISCELLANEOUS
# =============================================================================

# Temporary internet files
*.tmp
*.temp

# Lock files
*.lock
.lock

# PID files
*.pid

# Core dumps
core.*

# Swap files
*.swp
*.swo

# Patch files
*.patch
*.diff

# Archive extraction directories
extracted/
unzipped/

# Node.js (if using any JS tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# =============================================================================
# PROJECT-SPECIFIC EXCEPTIONS
# =============================================================================

# Keep example configuration files
!example_config.ini
!sample_config.ini
!config_template.ini

# Keep documentation
!docs/
!documentation/

# Keep requirements files
!requirements.txt
!requirements-dev.txt
!Pipfile
!pyproject.toml

# Keep GitHub workflows
!.github/

# Keep Docker files
!Dockerfile
!docker-compose.yml
!.dockerignore

# =============================================================================
# END OF .gitignore
# =============================================================================